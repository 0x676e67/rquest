name: CI

on:
  push:
    tags: ["v*"]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  style:
    name: Style
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Style check
        run: cargo fmt --all -- --check

      - name: Clippy check
        run: cargo clippy --all-targets --all-features

  windows:
    name: Windows
    runs-on: windows-latest
    environment: Windows
    steps:
      - uses: actions/checkout@v4

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install dependencies
        if: runner.os == 'Windows'
        run: |
          choco install cmake -y
          choco install strawberryperl -y
          choco install pkgconfiglite -y
          choco install llvm -y
          choco install nasm -y
        shell: cmd

      - name: Build
        run: |
          cargo build --all-features

  macos:
    name: macOS
    runs-on: macos-latest
    environment: macOS
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          brew update
          brew install --formula cmake pkg-config llvm

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build
        run: |
          cargo build --all-features

  linux:
    name: Linux
    needs: [windows, macos, style]
    runs-on: ubuntu-latest
    environment: Linux
    steps:
      - uses: actions/checkout@v4

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install depends
        run: |
          sudo apt update && sudo apt install cmake build-essential clang libclang-dev -y

      - name: Build & Tests
        run: |
          cargo test --all-features

      - uses: katyo/publish-crates@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
          ignore-unpublished-changes: true

      - name: Upload binaries to GitHub Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          token: ${{ secrets.CR_PAT }}
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
          generate_release_notes: true
